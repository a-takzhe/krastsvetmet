<Window x:Class="scheduler.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:scheduler"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        Title="Scheduler" Height="600" Width="1020" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" Icon="MainIcon.png" Loaded="Window_Loaded">
    <Window.Resources>
        <Style TargetType="TreeViewItem" BasedOn="{x:Null}">
            <Setter Property="IsExpanded" Value="{Binding IsNodeExpanded}"/>
        </Style>
        <Style x:Key="Button1" TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedDarkButton}">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
            <Setter Property="MaxWidth" Value="120"/>
            <Setter Property="Height" Value="auto"/>
        </Style>
        <Style x:Key="Button2" TargetType="Button" BasedOn="{StaticResource Button1}">
            <Setter Property="BorderBrush" Value="Teal"/>
            <Setter Property="Background" Value="Teal"/>
        </Style>
        <Style x:Key="ProgressBarStyleWithCornerRadius" TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Height" Value="4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnLoadedNoAnimation">
                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TemplateRoot"/>
                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="TemplateRoot"/>
                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="TemplateRoot"/>
                            </Storyboard>
                            <Storyboard x:Key="OnLoaded">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TemplateRoot">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="TemplateRoot">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="TemplateRoot">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="TemplateRoot" Opacity="0" RenderTransformOrigin="0,0.5">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="0" ScaleX="0"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" CornerRadius="3"/>

                            <Rectangle x:Name="PART_Track"/>
                            <Grid x:Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left" Height="12" VerticalAlignment="Top">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"  RadiusX="3" RadiusY="3"/>
                                <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" 
                                           RadiusX="3" RadiusY="3">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="materialDesign:TransitionAssist.DisableTransitions" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="BeginStoryboardOnLoadedNoAnimation">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TemplateRoot"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="TemplateRoot"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="TemplateRoot"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="BeginStoryboardOnLoadedNoAnimation"/>
                                </Trigger.ExitActions>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsVisible" Value="True"/>
                                    <Condition Property="materialDesign:TransitionAssist.DisableTransitions" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard x:Name="BeginStoryboardOnLoaded">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="TemplateRoot">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="TemplateRoot">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="TemplateRoot">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="BeginStoryboardOnLoaded"/>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsIndeterminate" Value="True">
                                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
        <Style x:Key="TabControlStyleWithCorner" TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            <Border x:Name="contentPanel" CornerRadius="0 4 4 4"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="WhiteSmoke" Grid.Column="0"
                                    KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" 
                                    KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="#FFE2E2E2" >
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <!--Основная часть-->
        <TabControl Grid.Row="0" Margin="2" BorderBrush="Gainsboro" Style="{DynamicResource TabControlStyleWithCorner}">
            <TabControl.Resources>
                <Style TargetType="TabItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Border Name="Border" BorderThickness="0" Margin="0 0 0 -1" 
                                                BorderBrush="Gainsboro" CornerRadius="3,3,0,0">
                                    <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Panel.ZIndex" Value="1"/>
                                        <Setter Property="Margin" Value="-2,-3,-3,0"/>
                                        <Setter Property="Opacity" TargetName="Border" Value="1"/>
                                        <Setter Property="BorderThickness" TargetName="Border" Value="1,1,1,0"/>
                                        <Setter TargetName="Border" Property="Background" Value="WhiteSmoke"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter TargetName="Border" Property="Background" Value="#FFBFBFBF"/>
                                        <Setter Property="BorderThickness" TargetName="Border" Value="1,1,1,0"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
            <TabItem Header="Входные параметры" FontWeight="SemiBold" Foreground="#FF474747">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!--Панель с кнопками управления-->
                    <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5 10">
                        <Button Style="{StaticResource Button1}" Click="BtnSelectDir_Click" materialDesign:ButtonAssist.CornerRadius="3">
                            <TextBlock Margin="0 0 0 2" TextWrapping="Wrap">Выбрать папку с файлами</TextBlock>
                        </Button>
                        <StackPanel Orientation="Vertical" Margin="15 0">
                            <RadioButton Style="{StaticResource MaterialDesignRadioButton}" Margin="0 0 0 0" x:Name="RB_Jhns"
                                         FontWeight="SemiBold" Foreground="#FF474747" FontSize="12">Обобщение Джонсона
                            </RadioButton>
                            <RadioButton Style="{StaticResource MaterialDesignRadioButton}" Margin="0 2 0 0"  IsChecked="True" x:Name="RB_PS"
                                         FontSize="12" FontWeight="SemiBold" Foreground="#FF474747">Метод Петрова-Соколицинв
                            </RadioButton>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="5 10">
                        <Button Style="{StaticResource Button2}" Click="BtnSchedule_Click" IsEnabled="False" 
                                materialDesign:ButtonAssist.CornerRadius="3" x:Name="BtnSchedule">
                            <TextBlock Margin="0 0 0 2" TextWrapping="Wrap">Спланировать рассписание</TextBlock>
                        </Button>
                        <Button Style="{StaticResource Button1 }" Margin="15 0 0 0" MaxWidth="200" IsEnabled="False" Click="BtnCreateExcel_Click"
                                Background="#FF607D8B" materialDesign:ButtonAssist.CornerRadius="3" BorderBrush="#FF607D8B" x:Name="BtnCreateExcel">
                            <TextBlock Margin="0 0 0 2" TextWrapping="Wrap">Вывести результаты планирования в Excel</TextBlock>
                        </Button>
                    </StackPanel>

                    <!--Основная область на первой вкладке, где выводятся таблицы-->
                    <materialDesign:Card materialDesign:ShadowAssist.ShadowDepth="Depth1" Grid.Row="1" Margin="5 6 5 5" HorizontalAlignment="Stretch" >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0" Margin="10 0 0 5" VerticalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="Номенклатуры в партии" Margin="0 10" HorizontalAlignment="Center"
                                           FontWeight="SemiBold" Foreground="#FF474747"/>
                                <DataGrid x:Name="DGV_Parties" AutoGenerateColumns="false"  Background="#FFFBFBFB" Grid.Row="1"
                                          VerticalGridLinesBrush="LightGray" GridLinesVisibility="All" IsReadOnly="True"
                                          FontSize="12" VerticalAlignment="Top" Margin="5">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="№ Партии" Binding="{Binding Path=Batch_ID}"/>
                                        <DataGridTextColumn Header="Номенклатура" Binding="{Binding Path=Nomenclature}"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                            <Grid Grid.Column="1" Margin="20 0 0 5" VerticalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="Время обработки номенклатуры на станке" Margin="5 10"
                                           HorizontalAlignment="Center" FontWeight="SemiBold" Foreground="#FF474747"/>
                                <DataGrid x:Name="DGV_Times" AutoGenerateColumns="True"  Background="#FFFBFBFB" Grid.Row="1" Margin="5"
                                          VerticalGridLinesBrush="LightGray" GridLinesVisibility="All" ItemsSource="{Binding}"
                                          IsReadOnly="True" FontSize="12" VerticalAlignment="Top">
                                </DataGrid>
                            </Grid>
                        </Grid>
                    </materialDesign:Card>
                </Grid>
            </TabItem>
            <TabItem Header="Результат планирования" FontWeight="SemiBold" Foreground="#FF474747">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!--Область для вывода письменного описания спланированного режима работы-->
                    <Grid Grid.Column="0" Margin="10 5" MaxWidth="300">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" HorizontalAlignment="Center" Text="Описание диаграммы" Margin="0 0 0 5"/>
                        <Border Grid.Row="1"  BorderThickness="1" BorderBrush="LightGray">
                            <TreeView x:Name="TreeViewGantt_String" >
                                <TreeView.ItemTemplate>
                                    <HierarchicalDataTemplate ItemsSource="{Binding Path=Nomenclatures}">
                                        <TextBlock Text="{Binding MachineTool}"/>
                                        <HierarchicalDataTemplate.ItemTemplate>
                                            <HierarchicalDataTemplate ItemsSource="{Binding Path=PartiesParametrs}">
                                                <TextBlock>
                                                    <TextBlock.Text>
                                                        <MultiBinding StringFormat="Партии с номенклатурой {0} (Начало: {1} - Конец: {2}) обработки">
                                                            <Binding Path="GN_NomenclatureName"/>
                                                            <Binding Path="GN_Start"/>
                                                            <Binding Path="GN_End"/>
                                                        </MultiBinding>
                                                    </TextBlock.Text>
                                                </TextBlock>
                                                <HierarchicalDataTemplate.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock>
                                                            <TextBlock.Text>
                                                                <MultiBinding StringFormat="Партия {0} (Начало: {1} - Конец: {2})">
                                                                    <Binding Path="GP_Batch_ID"/>
                                                                    <Binding Path="GP_Start"/>
                                                                    <Binding Path="GP_End"/>
                                                                </MultiBinding>
                                                            </TextBlock.Text>
                                                        </TextBlock>
                                                    </DataTemplate>
                                                </HierarchicalDataTemplate.ItemTemplate>
                                            </HierarchicalDataTemplate>
                                        </HierarchicalDataTemplate.ItemTemplate>
                                    </HierarchicalDataTemplate>
                                </TreeView.ItemTemplate>
                            </TreeView>
                        </Border>
                    </Grid>

                    <!--Область для вывода графического описания спланированного режима работы-->
                    <Grid Grid.Column="1" Margin="0 5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" HorizontalAlignment="Center" Text="Диаграмма Гантта" Margin="0 0 0 5"/>
                        <Border BorderThickness="1" BorderBrush="LightGray" Grid.Row="1">
                            <TreeView x:Name="TreeViewGantt_Bar" Grid.Column="1" Margin="0 5">
                                <TreeView.ItemTemplate>
                                    <HierarchicalDataTemplate ItemsSource="{Binding Path=Nomenclatures}">
                                        <TextBlock Text="{Binding MachineTool}"/>
                                        <HierarchicalDataTemplate.ItemTemplate>
                                            <HierarchicalDataTemplate ItemsSource="{Binding Path=PartiesParametrs}">
                                                <materialDesign:ColorZone Mode="Accent" Height="15"   
                                                                      Width="{Binding GN_WorkingHours}" Margin="{Binding GN_LeftMargin}">
                                                    <Grid>
                                                        <TextBlock Text="{Binding GN_Start}" Grid.Column="0" HorizontalAlignment="Left" FontSize="10"/>
                                                        <TextBlock Text="{Binding GN_End}" Grid.Column="0" HorizontalAlignment="Right" FontSize="10"/>
                                                    </Grid>
                                                </materialDesign:ColorZone>
                                                <HierarchicalDataTemplate.ItemTemplate>
                                                    <DataTemplate>
                                                        <materialDesign:ColorZone Mode="PrimaryDark" Height="15"   
                                                                      Width="{Binding GP_WorkingHours}" Margin="{Binding GP_LeftMargin}">
                                                        </materialDesign:ColorZone>
                                                    </DataTemplate>
                                                </HierarchicalDataTemplate.ItemTemplate>
                                            </HierarchicalDataTemplate>
                                        </HierarchicalDataTemplate.ItemTemplate>
                                    </HierarchicalDataTemplate>
                                </TreeView.ItemTemplate>
                            </TreeView>
                        </Border>
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>

        <!--Footer-->
        <Border Grid.Row="1" BorderThickness="0 1 0 0" BorderBrush="LightGray" Height="23" CornerRadius="3">
            <Grid>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" >
                    <ProgressBar Minimum="0" Maximum="100" Width="150" Height="12"
                                 IsIndeterminate="True"
                                 materialDesign:TransitionAssist.DisableTransitions="True"
                                 HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="5 4 5 6"
                                 x:Name="ProgressBar" Visibility="Collapsed" Style="{DynamicResource ProgressBarStyleWithCornerRadius}"/>
                    <materialDesign:PackIcon Kind="Check" Height="15" Margin="5 2 0 0" 
                                             x:Name="IconCheck" Foreground="Teal" Visibility="Collapsed" />
                    <materialDesign:PackIcon Kind="Warning" Height="15" Margin="5 2 0 0" 
                                             x:Name="IconWarning" Foreground="#FFF54336"/>
                    <Label FontFamily="Arial" Margin="5 0 0 1" HorizontalAlignment="Left" Content = "Данные не загружены!"
                           VerticalAlignment="Bottom" FontSize="11" x:Name="LStatus"/>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</Window>